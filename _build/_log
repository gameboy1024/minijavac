### Starting build.
# Target: Main/Main.ml.depends, tags: { extension:ml, file:Main/Main.ml, ocaml, ocamldep, package(ANSITerminal), quiet, traverse, use_menhir, warn_a }
/usr/bin/ocamldep -modules Main/Main.ml > Main/Main.ml.depends # cached
# Target: Main/Compile.ml.depends, tags: { extension:ml, file:Main/Compile.ml, ocaml, ocamldep, package(ANSITerminal), quiet, traverse, use_menhir, warn_a }
/usr/bin/ocamldep -modules Main/Compile.ml > Main/Compile.ml.depends # cached
# Target: Parsing/AST.ml.depends, tags: { extension:ml, file:Parsing/AST.ml, ocaml, ocamldep, package(ANSITerminal), quiet, traverse, use_menhir, warn_a }
/usr/bin/ocamldep -modules Parsing/AST.ml > Parsing/AST.ml.depends # cached
# Target: Utils/Located.mli.depends, tags: { extension:mli, file:Utils/Located.mli, ocaml, ocamldep, package(ANSITerminal), quiet, traverse, use_menhir, warn_a }
/usr/bin/ocamldep -modules Utils/Located.mli > Utils/Located.mli.depends # cached
# Target: Utils/Location.mli.depends, tags: { extension:mli, file:Utils/Location.mli, ocaml, ocamldep, package(ANSITerminal), quiet, traverse, use_menhir, warn_a }
/usr/bin/ocamldep -modules Utils/Location.mli > Utils/Location.mli.depends # cached
# Target: Utils/Location.cmi, tags: { byte, compile, extension:mli, file:Utils/Location.mli, interf, ocaml, package(ANSITerminal), quiet, traverse, use_menhir, warn_a }
/usr/bin/ocamlc -c -w a -I Utils -I Parsing -I Main -I Typing -I minijavac_phase1/Parsing -I minijavac_phase1/Main -I minijavac_phase1/Utils -o Utils/Location.cmi Utils/Location.mli # cached
# Target: Utils/Located.cmi, tags: { byte, compile, extension:mli, file:Utils/Located.mli, interf, ocaml, package(ANSITerminal), quiet, traverse, use_menhir, warn_a }
/usr/bin/ocamlc -c -w a -I Utils -I Parsing -I Main -I Typing -I minijavac_phase1/Parsing -I minijavac_phase1/Main -I minijavac_phase1/Utils -o Utils/Located.cmi Utils/Located.mli # cached
# Target: Typing/Type.mli.depends, tags: { extension:mli, file:Typing/Type.mli, ocaml, ocamldep, package(ANSITerminal), quiet, traverse, use_menhir, warn_a }
/usr/bin/ocamldep -modules Typing/Type.mli > Typing/Type.mli.depends # cached
# Target: Typing/Type.cmi, tags: { byte, compile, extension:mli, file:Typing/Type.mli, interf, ocaml, package(ANSITerminal), quiet, traverse, use_menhir, warn_a }
/usr/bin/ocamlc -c -w a -I Typing -I Parsing -I Main -I Utils -I minijavac_phase1/Parsing -I minijavac_phase1/Main -I minijavac_phase1/Utils -o Typing/Type.cmi Typing/Type.mli # cached
# Target: Parsing/AST.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:Parsing/AST.cmo, file:Parsing/AST.ml, implem, ocaml, package(ANSITerminal), quiet, traverse, use_menhir, warn_a }
/usr/bin/ocamlc -c -w a -I Parsing -I Main -I Typing -I Utils -I minijavac_phase1/Parsing -I minijavac_phase1/Main -I minijavac_phase1/Utils -o Parsing/AST.cmo Parsing/AST.ml # cached
# Target: Parsing/Error.mli.depends, tags: { extension:mli, file:Parsing/Error.mli, ocaml, ocamldep, package(ANSITerminal), quiet, traverse, use_menhir, warn_a }
/usr/bin/ocamldep -modules Parsing/Error.mli > Parsing/Error.mli.depends # cached
# Target: Parsing/Error.cmi, tags: { byte, compile, extension:mli, file:Parsing/Error.mli, interf, ocaml, package(ANSITerminal), quiet, traverse, use_menhir, warn_a }
/usr/bin/ocamlc -c -w a -I Parsing -I Main -I Typing -I Utils -I minijavac_phase1/Parsing -I minijavac_phase1/Main -I minijavac_phase1/Utils -o Parsing/Error.cmi Parsing/Error.mli # cached
# Target: Parsing/Lexer.mll, tags: { extension:mll, file:Parsing/Lexer.mll, lexer, ocaml, ocamllex, package(ANSITerminal), quiet, traverse, use_menhir, warn_a }
/usr/bin/ocamllex -q Parsing/Lexer.mll # cached
# Target: Parsing/Lexer.ml.depends, tags: { extension:ml, file:Parsing/Lexer.ml, ocaml, ocamldep, package(ANSITerminal), quiet, traverse, use_menhir, warn_a }
/usr/bin/ocamldep -modules Parsing/Lexer.ml > Parsing/Lexer.ml.depends # cached
# Target: Parsing/Parser.mly.depends, tags: { extension:mly, file:Parsing/Parser.mly, menhir_ocamldep, ocaml, ocamldep, package(ANSITerminal), quiet, traverse, use_menhir, warn_a }
menhir --raw-depend --ocamldep '/usr/bin/ocamldep -modules' Parsing/Parser.mly > Parsing/Parser.mly.depends # cached
# Target: Parsing/Parser.mly, tags: { byte, compile, extension:mly, file:Parsing/Parser.mly, menhir, ocaml, package(ANSITerminal), parser, quiet, traverse, use_menhir, warn_a }
menhir --ocamlc '/usr/bin/ocamlc -w a -I Parsing -I Main -I Typing -I Utils -I minijavac_phase1/Parsing -I minijavac_phase1/Main -I minijavac_phase1/Utils' --infer Parsing/Parser.mly # cached
# Target: Parsing/Parser.mli.depends, tags: { extension:mli, file:Parsing/Parser.mli, ocaml, ocamldep, package(ANSITerminal), quiet, traverse, use_menhir, warn_a }
/usr/bin/ocamldep -modules Parsing/Parser.mli > Parsing/Parser.mli.depends # cached
# Target: Parsing/Parser.cmi, tags: { byte, compile, extension:mli, file:Parsing/Parser.mli, interf, ocaml, package(ANSITerminal), quiet, traverse, use_menhir, warn_a }
/usr/bin/ocamlc -c -w a -I Parsing -I Main -I Typing -I Utils -I minijavac_phase1/Parsing -I minijavac_phase1/Main -I minijavac_phase1/Utils -o Parsing/Parser.cmi Parsing/Parser.mli # cached
# Target: Parsing/Lexer.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:Parsing/Lexer.cmo, file:Parsing/Lexer.ml, implem, ocaml, package(ANSITerminal), quiet, traverse, use_menhir, warn_a }
/usr/bin/ocamlc -c -w a -I Parsing -I Main -I Typing -I Utils -I minijavac_phase1/Parsing -I minijavac_phase1/Main -I minijavac_phase1/Utils -o Parsing/Lexer.cmo Parsing/Lexer.ml # cached
# Target: Typing/TypeError.mli.depends, tags: { extension:mli, file:Typing/TypeError.mli, ocaml, ocamldep, package(ANSITerminal), quiet, traverse, use_menhir, warn_a }
/usr/bin/ocamldep -modules Typing/TypeError.mli > Typing/TypeError.mli.depends # cached
# Target: Typing/TypeError.cmi, tags: { byte, compile, extension:mli, file:Typing/TypeError.mli, interf, ocaml, package(ANSITerminal), quiet, traverse, use_menhir, warn_a }
/usr/bin/ocamlc -c -w a -I Typing -I Parsing -I Main -I Utils -I minijavac_phase1/Parsing -I minijavac_phase1/Main -I minijavac_phase1/Utils -o Typing/TypeError.cmi Typing/TypeError.mli # cached
# Target: Typing/Typing.mli.depends, tags: { extension:mli, file:Typing/Typing.mli, ocaml, ocamldep, package(ANSITerminal), quiet, traverse, use_menhir, warn_a }
/usr/bin/ocamldep -modules Typing/Typing.mli > Typing/Typing.mli.depends # cached
# Target: Typing/Typing.cmi, tags: { byte, compile, extension:mli, file:Typing/Typing.mli, interf, ocaml, package(ANSITerminal), quiet, traverse, use_menhir, warn_a }
/usr/bin/ocamlc -c -w a -I Typing -I Parsing -I Main -I Utils -I minijavac_phase1/Parsing -I minijavac_phase1/Main -I minijavac_phase1/Utils -o Typing/Typing.cmi Typing/Typing.mli # cached
# Target: Main/Compile.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:Main/Compile.cmo, file:Main/Compile.ml, implem, ocaml, package(ANSITerminal), quiet, traverse, use_menhir, warn_a }
/usr/bin/ocamlc -c -w a -I Main -I Parsing -I Typing -I Utils -I minijavac_phase1/Parsing -I minijavac_phase1/Main -I minijavac_phase1/Utils -o Main/Compile.cmo Main/Compile.ml # cached
# Target: Main/Main.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:Main/Main.cmo, file:Main/Main.ml, implem, ocaml, package(ANSITerminal), quiet, traverse, use_menhir, warn_a }
/usr/bin/ocamlc -c -w a -I Main -I Parsing -I Typing -I Utils -I minijavac_phase1/Parsing -I minijavac_phase1/Main -I minijavac_phase1/Utils -o Main/Main.cmo Main/Main.ml # cached
# Target: Utils/Location.ml.depends, tags: { extension:ml, file:Utils/Location.ml, ocaml, ocamldep, package(ANSITerminal), quiet, traverse, use_menhir, warn_a }
/usr/bin/ocamldep -modules Utils/Location.ml > Utils/Location.ml.depends # cached
# Target: Utils/Location.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:Utils/Location.cmo, file:Utils/Location.ml, implem, ocaml, package(ANSITerminal), quiet, traverse, use_menhir, warn_a }
/usr/bin/ocamlc -c -w a -I Utils -I Parsing -I Main -I Typing -I minijavac_phase1/Parsing -I minijavac_phase1/Main -I minijavac_phase1/Utils -o Utils/Location.cmo Utils/Location.ml # cached
# Target: Parsing/Error.ml.depends, tags: { extension:ml, file:Parsing/Error.ml, ocaml, ocamldep, package(ANSITerminal), quiet, traverse, use_menhir, warn_a }
/usr/bin/ocamldep -modules Parsing/Error.ml > Parsing/Error.ml.depends # cached
# Target: Parsing/Error.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:Parsing/Error.cmo, file:Parsing/Error.ml, implem, ocaml, package(ANSITerminal), quiet, traverse, use_menhir, warn_a }
/usr/bin/ocamlc -c -w a -I Parsing -I Main -I Typing -I Utils -I minijavac_phase1/Parsing -I minijavac_phase1/Main -I minijavac_phase1/Utils -o Parsing/Error.cmo Parsing/Error.ml # cached
# Target: Parsing/Parser.ml.depends, tags: { extension:ml, file:Parsing/Parser.ml, ocaml, ocamldep, package(ANSITerminal), quiet, traverse, use_menhir, warn_a }
/usr/bin/ocamldep -modules Parsing/Parser.ml > Parsing/Parser.ml.depends # cached
# Target: Parsing/Parser.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:Parsing/Parser.cmo, file:Parsing/Parser.ml, implem, ocaml, package(ANSITerminal), quiet, traverse, use_menhir, warn_a }
/usr/bin/ocamlc -c -w a -I Parsing -I Main -I Typing -I Utils -I minijavac_phase1/Parsing -I minijavac_phase1/Main -I minijavac_phase1/Utils -o Parsing/Parser.cmo Parsing/Parser.ml # cached
# Target: Typing/TypeError.ml.depends, tags: { extension:ml, file:Typing/TypeError.ml, ocaml, ocamldep, package(ANSITerminal), quiet, traverse, use_menhir, warn_a }
/usr/bin/ocamldep -modules Typing/TypeError.ml > Typing/TypeError.ml.depends # cached
# Target: Typing/TypeError.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:Typing/TypeError.cmo, file:Typing/TypeError.ml, implem, ocaml, package(ANSITerminal), quiet, traverse, use_menhir, warn_a }
/usr/bin/ocamlc -c -w a -I Typing -I Parsing -I Main -I Utils -I minijavac_phase1/Parsing -I minijavac_phase1/Main -I minijavac_phase1/Utils -o Typing/TypeError.cmo Typing/TypeError.ml # cached
# Target: Typing/Typing.ml.depends, tags: { extension:ml, file:Typing/Typing.ml, ocaml, ocamldep, package(ANSITerminal), quiet, traverse, use_menhir, warn_a }
/usr/bin/ocamldep -modules Typing/Typing.ml > Typing/Typing.ml.depends # cached
# Target: Typing/Typing.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:Typing/Typing.cmo, file:Typing/Typing.ml, implem, ocaml, package(ANSITerminal), quiet, traverse, use_menhir, warn_a }
/usr/bin/ocamlc -c -w a -I Typing -I Parsing -I Main -I Utils -I minijavac_phase1/Parsing -I minijavac_phase1/Main -I minijavac_phase1/Utils -o Typing/Typing.cmo Typing/Typing.ml # cached
# Target: Utils/Located.ml.depends, tags: { extension:ml, file:Utils/Located.ml, ocaml, ocamldep, package(ANSITerminal), quiet, traverse, use_menhir, warn_a }
/usr/bin/ocamldep -modules Utils/Located.ml > Utils/Located.ml.depends # cached
# Target: Utils/Located.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:Utils/Located.cmo, file:Utils/Located.ml, implem, ocaml, package(ANSITerminal), quiet, traverse, use_menhir, warn_a }
/usr/bin/ocamlc -c -w a -I Utils -I Parsing -I Main -I Typing -I minijavac_phase1/Parsing -I minijavac_phase1/Main -I minijavac_phase1/Utils -o Utils/Located.cmo Utils/Located.ml # cached
# Target: Typing/Type.ml.depends, tags: { extension:ml, file:Typing/Type.ml, ocaml, ocamldep, package(ANSITerminal), quiet, traverse, use_menhir, warn_a }
/usr/bin/ocamldep -modules Typing/Type.ml > Typing/Type.ml.depends # cached
# Target: Typing/Type.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:Typing/Type.cmo, file:Typing/Type.ml, implem, ocaml, package(ANSITerminal), quiet, traverse, use_menhir, warn_a }
/usr/bin/ocamlc -c -w a -I Typing -I Parsing -I Main -I Utils -I minijavac_phase1/Parsing -I minijavac_phase1/Main -I minijavac_phase1/Utils -o Typing/Type.cmo Typing/Type.ml # cached
# Target: Main/Main.byte, tags: { byte, dont_link_with, extension:byte, file:Main/Main.byte, link, ocaml, package(ANSITerminal), program, quiet, traverse, use_menhir, warn_a }
/usr/bin/ocamlc Typing/Type.cmo Utils/Location.cmo Utils/Located.cmo Parsing/AST.cmo Parsing/Error.cmo Parsing/Parser.cmo Parsing/Lexer.cmo Typing/TypeError.cmo Typing/Typing.cmo Main/Compile.cmo Main/Main.cmo -o Main/Main.byte # cached
# Compilation successful.
